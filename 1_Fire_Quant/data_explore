/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var states = ee.FeatureCollection("TIGER/2018/States"),
    llp = ee.Image("projects/servir-sco-assets/assets/Rx_Fire/EO_Inputs/LEO_extantLLP_significance"),
    padus_fee = ee.FeatureCollection("USGS/GAP/PAD-US/v20/fee"),
    padus_desig = ee.FeatureCollection("USGS/GAP/PAD-US/v20/designation"),
    padus_ease = ee.FeatureCollection("USGS/GAP/PAD-US/v20/easement"),
    padus_proc = ee.FeatureCollection("USGS/GAP/PAD-US/v20/proclamation"),
    wildfire = ee.FeatureCollection("projects/servir-sco-assets/assets/Rx_Fire/Vector_Data/USFS_wildfire_perims");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var dataset = ee.FeatureCollection('USGS/GAP/PAD-US/v20/fee');

// Encode 'GAP_Sts' (protection level) as a number for visualization.
dataset = dataset.map(function(feature) {
  return feature.set('status', ee.Number.parse(feature.get('GAP_Sts')));
});

// Paint new 'status' value to an image for visualization.
var datasetVis = ee.Image().byte().paint(dataset, 'status');

var visualization = {
  min: 1,
  max: 4,
  palette: ['b1a44e', '4eb173', '4e5bb1', 'b14e8c']
};

Map.setCenter(-100.612, 43.687, 8);
Map.addLayer(datasetVis, visualization, 'Protection status');
Map.addLayer(dataset, null, 'FeatureCollection', false);
